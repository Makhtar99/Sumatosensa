name: Backend Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  POSTGRES_DB: sumatosensa_test
  POSTGRES_USER: test_user
  POSTGRES_PASSWORD: test_password
  SECRET_KEY: test-secret-key-for-ci
  ALGORITHM: HS256

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: timescale/timescaledb:latest-pg16
        env:
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          TIMESCALEDB_TELEMETRY: off
        options: >-
          --health-cmd "pg_isready -U test_user -d sumatosensa_test"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4
    
    - name: Start Mosquitto MQTT Broker
      run: |
        mkdir -p mosquitto-config
        cat > mosquitto-config/mosquitto.conf <<EOF
        listener 1883
        allow_anonymous true
        persistence false
        log_dest stdout
        EOF
        docker run -d --name mosquitto-ci --network github_network_${{ github.run_id }} -p 1883:1883 -v ${{ github.workspace }}/mosquitto-config:/mosquitto/config eclipse-mosquitto:2.0
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('backend/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        cd backend
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-asyncio httpx pytest-cov
    
    - name: Wait for services
      run: |
        sleep 10
        nc -z localhost 5432
        nc -z localhost 1883
    
    - name: Run backend tests
      env:
        DATABASE_URL: postgresql+asyncpg://${{ env.POSTGRES_USER }}:${{ env.POSTGRES_PASSWORD }}@localhost:5432/${{ env.POSTGRES_DB }}
        MQTT_BROKER_HOST: localhost
        MQTT_BROKER_PORT: 1883
      run: |
        cd backend
        PYTHONPATH=. python -m pytest tests/ -v --cov=app --cov-report=xml --cov-report=term